[{"/home/joao/Área de Trabalho/www/HeroX/client/src/reportWebVitals.ts":"1","/home/joao/Área de Trabalho/www/HeroX/client/src/components/Inputs/index.tsx":"2"},{"size":430,"mtime":1606310538786,"results":"3","hashOfConfig":"4"},{"size":1554,"mtime":1606346573111,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"aavenf",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joao/Área de Trabalho/www/HeroX/client/src/reportWebVitals.ts",["10"],"/home/joao/Área de Trabalho/www/HeroX/client/src/components/Inputs/index.tsx",[],{"ruleId":"11","severity":1,"message":"12","line":3,"column":56,"nodeType":"13","messageId":"14","endLine":3,"endColumn":59,"suggestions":"15"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["16","17"],{"messageId":"18","fix":"19","desc":"20"},{"messageId":"21","fix":"22","desc":"23"},"suggestUnknown",{"range":"24","text":"25"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"24","text":"26"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[100,103],"unknown","never"]